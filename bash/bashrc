#!/usr/bin/env bash
# to debug, simply run bash -x

export SOURCED="$SOURCED:.bashrc"

######################
# Sourcing other files
######################
source ~/.profile

source $HOME/.dotfiles/bash/bzshrc

DIR=$HOME/.dotfiles

# Fuzzy finder
[ -f ~/.fzf.bash ] && source ~/.fzf.bash

# autocompletion for sudo
# complete -cf sudo

# Always color grep output, even when piping
export GREP_OPTIONS='--color=always'

## Cylcle through completions ###
# [[ $- = *i* ]] && bind TAB:menu-complete
# [[ $- = *i* ]] && bind CONTROL-k:menu-complete
# [[ $- = *i* ]] && bind CONTROL-j:menu-complete-backward

## Ignore case with completion ##
# bind 'set completion-ignore-case on'
## Show list after the first tab ##
set show-all-if-ambiguous on

## Minor spell checking with cd ##
# shopt -s cdspell

## Case insensitice Filename matching / completions ##
set completion-ignore-case on

## Bash will append (not overwrite) history on disk ##
# shopt -s histappend
## Write previous line to disk ##
# PROMPT_COMMAND='history -a'


# start z shell
# zsh

# Python pyenv stuff
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
if command -v pyenv 1>/dev/null 2>&1; then
  eval "$(pyenv init -)";
fi

# goenv stuff
export GOENV_ROOT="$HOME/.goenv"
export PATH="$GOENV_ROOT/bin:$PATH"
eval "$(goenv init -)"
export GOROOT="$(goenv prefix)"

# haskell stack
export PATH="$PATH:$HOME/.local/bin"

# git completion
source $DIR/git/git-completion.sh
__git_complete g __git_main

# git prompt
if [ -r $DIR/git/git-prompt.sh ]; then
  source $DIR/git/git-prompt.sh
  GIT_PS1_SHOWDIRTYSTATE=1 # puts * for unstaged and + for staged
  GIT_PS1_SHOWSTASHSTATE=1 # puts a $ for stashed files
  GIT_PS1_SHOWUNTRACKEDFILES=1 # puts a % for untracked files
  GIT_PS1_SHOWUPSTREAM=auto # < indicates behind upstream, > indicates we are ahead
                            # <> means diverged, = indicates no difference
fi

export CLICOLOR=1
export LSCOLORS=ExFxBxDxCxegedabagacad

# PS1='[\W$(__git_ps1 " (%s)")]\$ '
PROMPT_COMMAND='__git_ps1 "\w" "\\\$ "'
